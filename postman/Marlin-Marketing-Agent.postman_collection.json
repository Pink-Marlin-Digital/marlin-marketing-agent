{
  "info": {
    "name": "Marlin Marketing Agent",
    "description": "Comprehensive test collection for Marlin Marketing Agent API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Hello Endpoint",
      "item": [
        {
          "name": "Generate Hello Message - Success",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/hello",
              "host": ["{{base_url}}"],
              "path": ["hello"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has message field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.be.a('string');",
                  "    pm.expect(jsonData.message.length).to.be.greaterThan(0);",
                  "});",
                  "",
                  "pm.test('Response has metadata', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('metadata');",
                  "    pm.expect(jsonData.metadata).to.have.property('processingTime');",
                  "    pm.expect(jsonData.metadata).to.have.property('tokensUsed');",
                  "    pm.expect(jsonData.metadata).to.have.property('timestamp');",
                  "});",
                  "",
                  "pm.test('Response time is less than 5 seconds', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test('Message contains time and day information', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const message = jsonData.message.toLowerCase();",
                  "    pm.expect(message).to.include('time');",
                  "    pm.expect(message).to.include('day');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate Hello Message - Missing API Key",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/hello",
              "host": ["{{base_url}}"],
              "path": ["hello"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Response has error field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate Hello Message - Invalid API Key",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "invalid-key",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/hello",
              "host": ["{{base_url}}"],
              "path": ["hello"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Response has error field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Health Endpoint",
      "item": [
        {
          "name": "Health Check - Success",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has all required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('timestamp');",
                  "    pm.expect(jsonData).to.have.property('version');",
                  "    pm.expect(jsonData).to.have.property('uptime');",
                  "    pm.expect(jsonData).to.have.property('environment');",
                  "});",
                  "",
                  "pm.test('Status is valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const validStatuses = ['healthy', 'degraded', 'unhealthy'];",
                  "    pm.expect(validStatuses).to.include(jsonData.status);",
                  "});",
                  "",
                  "pm.test('Response time is less than 100ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(100);",
                  "});",
                  "",
                  "pm.test('Uptime is a positive number', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.uptime).to.be.a('number');",
                  "    pm.expect(jsonData.uptime).to.be.at.least(0);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Rate Limiting Tests",
      "item": [
        {
          "name": "Rate Limit Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/hello",
              "host": ["{{base_url}}"],
              "path": ["hello"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response is not rate limited', function () {",
                  "    pm.expect(pm.response.code).to.not.equal(429);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Authentication Tests",
      "item": [
        {
          "name": "Valid API Key Authentication",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/hello",
              "host": ["{{base_url}}"],
              "path": ["hello"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid API Key Authentication",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "invalid-key",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/hello",
              "host": ["{{base_url}}"],
              "path": ["hello"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Authentication failed', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for request tracking",
          "pm.globals.set('request_timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for response time tracking",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(10000);",
          "});"
        ]
      }
    }
  ]
}
